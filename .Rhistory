library(RCurl)
library(XML)
install_github("duncantl/XMLRPC")
library(devtools)
install_github("duncantl/XMLRPC")
install_github("duncantl/RWordPress")
library(XMLRPC)
library(RWordPress)
library(knitr)
options(WordPressLogin = c(user = 'stoltzmaniac'), WordPressURL = 'https://stoltzmaniac.com')
knit2wp('Data Visualization Lesson.Rmd', title = 'Data Visualization', publish = FALSE)
library(markdown)
library(knitr)
opts_knit$set(upload.fun = imgur_upload, base.url = NULL)
rmd.file <- "Data Visualization Lesson.Rmd"
knit(rmd.file)
markdown.file <- gsub(pattern = "Rmd$", replacement = "md", x = rmd.file)
html.file <- gsub(pattern = "md$", replacement = "_pub.html", x = markdown.file)
library(markdown)
markdownToHTML(file = markdown.file, output = html.file, fragment.only = TRUE)
library(RWordpress)
install_github("duncantl/RWordPress")
install_github("duncantl/RWordPress",force=TRUE)
library(RWordpress)
library(RWordPress)
options(WordpressLogin = c(your.username = 'ejkDD$$ckckslppzzzekAABV'),
WordpressURL = 'https://stoltzmaniac.com/xmlrpc.php')
text = paste(readLines(html.file), collapse = "\n")
newPost(list(description = text, title = "Data Visualization"), publish = FALSE)
text
rm(list = ls())
# _Libraries --------------------------------------------------------------
suppressPackageStartupMessages(library("knitr"))
suppressPackageStartupMessages(library("markdown"))
suppressPackageStartupMessages(library("RWordPress"))
# _ Read in arguments -----------------------------------------------------
args <- commandArgs(TRUE) # retrieve command-line arguments <filename> "title"'
names(args) <- c("document", "title") # label the arguments
setwd(system("pwd", intern = TRUE)) # set to the current working directory
cat("Preparing to send <", args["document"],
"> to Wordpress with the title <",
args["title"], "> \n")
pwd
getcwd()
cdw
cwd
cwd()
ls
ls()
getwd()
rm(list = ls())
suppressPackageStartupMessages(library("knitr"))
suppressPackageStartupMessages(library("markdown"))
suppressPackageStartupMessages(library("RWordPress"))
args <- commandArgs(TRUE) # retrieve command-line arguments <filename> "title"'
names(args) <- c("document", "title") # label the arguments
args
commandArgs
help(commandArgs)
args <- commandArgs(TRUE) # retrieve command-line arguments <filename> "title"'
names(args) <- c("document", "title") # label the arguments
library(knitr)
opts_knit$set(upload.fun = imgur_upload, base.url = NULL)
rmd.file <- "Data Visualization Lesson.Rmd"
knit(rmd.file)
markdown.file <- gsub(pattern = "Rmd$", replacement = "md", x = rmd.file)
html.file <- gsub(pattern = "md$", replacement = "_pub.html", x = markdown.file)
library(markdown)
markdownToHTML(file = markdown.file, output = html.file, fragment.only = TRUE)
library(RWordPress)
options(WordpressLogin = c(your.username = 'ejkDD$$ckckslppzzzekAABV'),
WordpressURL = 'https://stoltzmaniac.com/xmlrpc.php')
text = paste(readLines(html.file), collapse = "\n")
newPost(list(description = text, title = "Data Visualization"), publish = FALSE)
help(newPost)
options(WordPressLogin = c(user = 'ejkDD$$ckckslppzzzekAABV'), WordPressURL = 'https://stoltzmaniac.com/xmlrpc.php')
knit2wp('Data Visualization Lesson.Rmd', title = 'Data Visualization 2', publish = FALSE)
warnings()
knit2wp(input = 'Data Visualization Lesson.Rmd',
title = 'Data Visualization Lesson 3',
action = c("newPost"),
encoding = getOption("encoding"),
publish = FALSE)
library(knitr)
# Set figure dimensions
#opts_chunk$set(fig.width=5, fig.height=5)
# Set figures to upload to imgur.com
opts_knit$set(upload.fun = imgur_upload, base.url = NULL)
rmd.file <- "Data Visualization Lesson.Rmd"
# Knit the .Rmd file
knit(rmd.file)
# Set up input/ output files
markdown.file <- gsub(pattern = "Rmd$", replacement = "md", x = rmd.file)
html.file <- gsub(pattern = "md$", replacement = "_pub.html", x = markdown.file)
library(markdown)
# Removes 'yaml' information
markdownToHTML(file = markdown.file, output = html.file, fragment.only = TRUE)
library(RWordPress)
# Set your WP username, password, and your site URL
options(WordpressLogin = c(your.username = 'ejkDD$$ckckslppzzzekAABV'),
WordpressURL = 'https://stoltzmaniac.com/xmlrpc.php')
# Create a line-by-line text vector
text = paste(readLines(html.file), collapse = "\n")
# Send to Worpdress
newPost(list(description = text, title = "Data Visualization"), publish = FALSE)
library(knitr)
opts_knit$set(upload.fun = imgur_upload, base.url = NULL)
rmd.file <- "Data Visualization Lesson.Rmd"
knit(rmd.file)
markdown.file <- gsub(pattern = "Rmd$", replacement = "md", x = rmd.file)
html.file <- gsub(pattern = "md$", replacement = "_pub.html", x = markdown.file)
library(markdown)
markdownToHTML(file = markdown.file, output = html.file, fragment.only = TRUE)
library(RWordPress)
options(WordpressLogin = c(stoltzmaniac = 'ejkDD$$ckckslppzzzekAABV'),
WordpressURL = 'https://stoltzmaniac.com/xmlrpc.php')
text = paste(readLines(html.file), collapse = "\n")
newPost(list(description = text, title = "Data Visualization NUM"), publish = FALSE)
library(png)
library(grid)
```
library(png)
library(grid)
library(png)
library(grid)
```
library(png)
library(grid)
```
library(png)
library(grid)
```
library(png)
library(grid)
```
library(png)
library(grid)
library(png)
library(grid)
```
library(png)
library(grid)
getwd()
library(png)
library(grid)
```
library(png)
library(grid)
```
library(png)
library(grid)
```
library(png)
library(grid)
```
library(png)
library(grid)
```
```
```
```
library(png)
library(grid)
img = readPNG("images/title_photo.png")
grid.raster(img)
library(reshape2)
library(ggplot2)
data(economics,package='ggplot2') # load the economics data
data = melt(economics[, c("date", "pce", "unemploy", "psavert")], id="date")
head(data)
data(economics,package='ggplot2') # load the economics data
econ = melt(economics[, c("date", "pce", "unemploy", "psavert")], id="date")
head(econ)
p = ggplot(data = econ,)
library(lubridate)
econ$year = as.factor(year(econ$date))
head(econ)
library(dplyr)
head(economics)
df = econ %>%
filter(variable == 'pce') %>%
group_by(year) %>%
summarise(pce = sum(value))
head(df)
p = ggplot(df, aes(x=year, y=pce))
p
p + geom_line()
p = ggplot(df, aes(x=year, y=pce, group=1))
p + geom_line()
p + geom_line() + scale_x_date()
df = econ %>%
filter(variable == 'pce') %>%
group_by(date) %>%
summarise(pce = sum(value))
p = ggplot(df, aes(x=date, y=pce, group=1))
p + geom_line() + scale_x_date()
library(scales)
plot(df)
plot(df,type='l')
head(econ)
p = ggplot(econ, aes(x=date))
p + geom_line(aes(y=value,col=variable))
p + geom_line(aes(y=value)) + facet_wrap(~variable)
p + geom_line(aes(y=value)) + facet_wrap(~variable,ncol=1)
p + geom_line(aes(y=value)) + facet_wrap(~variable,ncol=1,scales='free')
df = econ %>%
filter(variable != 'psavert') %>%
spread(variable,value)
library(tidyr)
df = econ %>%
filter(variable != 'psavert') %>%
spread(variable,value)
head(df)
data(economics,package='ggplot2') # load the economics data
econ = melt(economics[, c("date", "pce", "unemploy", "psavert")], id="date")
df = econ %>%
filter(variable != 'psavert') %>%
spread(variable,value)
p = ggplot(econ %>% filter(variable != 'psavert'))
df
head(df)
df = econ %>%
filter(variable != 'psavert') %>%
spread(variable,value) %>%
select(pce,unemploy)
p + geom_point(x=pce,y=unemploy)
df = econ %>%
filter(variable != 'psavert') %>%
spread(variable,value) %>%
select(pce,unemploy,year(date))
df = econ %>%
filter(variable != 'psavert') %>%
spread(variable,value) %>%
select(pce,unemploy)
df = econ %>%
filter(variable != 'psavert') %>%
spread(variable,value) %>%
select(pce,unemploy, year(date) as year)
df = econ %>%
filter(variable != 'psavert') %>%
spread(variable,value) %>%
select(pce,unemploy)
p = ggplot(df)
p + geom_point(x=pce,y=unemploy)
head(df)
p + geom_point(aes(x=pce,y=unemploy))
df = econ %>%
spread(variable,value) %>%
select(pce,unemploy)
p = ggplot(df)
p + geom_point(aes(x=pce,y=psavert))
head(df)
p = ggplot(df)
p + geom_point(aes(x=pce,y=psavert))
df = econ %>%
spread(variable,value)
head(df)
p = ggplot(df)
p + geom_point(aes(x=pce,y=psavert))
p + geom_point(aes(x=pce,y=psavert,col=as.factor(year(date))))
econ$year = year(econ$date)
econ$decade = '1960s'
econ$year = year(econ$date)
econ$decade = '1960s'
econ$decade[econ$year >= 1970] = '1970s'
econ$decade[econ$year >= 1980] = '1980s'
econ$decade[econ$year >= 1990] = '1990s'
econ$decade[econ$year >= 2000] = '2000s'
econ$decade[econ$year >= 2010] = '2010s'
econ$decade = as.factor(econ$decade)
df = econ %>%
spread(variable,value)
p = ggplot(df)
p + geom_point(aes(x=pce,y=psavert,col=decade))
head(df)
p + geom_bar(aes(x=decade,y=unemploy))
p + geom_bar(aes(x=decade,y=unemploy),stat='identity')
options(scipen=999)  # turn-off scientific notation like 1e+48
theme_set(theme_bw())  # pre-set the bw theme.
data("midwest", package = "ggplot2")
gg <- ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state, size=popdensity)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 0.1)) +
ylim(c(0, 500000)) +
labs(subtitle="Area Vs Population",
y="Population",
x="Area",
title="Scatterplot",
caption = "Source: midwest")
plot(gg)
options(scipen=999)  # turn-off scientific notation like 1e+48
theme_set(theme_bw())  # pre-set the bw theme.
data("midwest", package = "ggplot2")
gg <- ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state, size=popdensity)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 0.1)) +
ylim(c(0, 500000)) +
labs(subtitle="Area Vs Population",
y="Population",
x="Area",
title="Scatterplot",
caption = "Source: midwest")
plot(gg)
p + geom_point(aes(col=state, size=popdensity)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 0.1)) +
ylim(c(0, 500000)) +
labs(subtitle="Area Vs Population",
y="Population",
x="Area",
title="Scatterplot",
caption = "Source: midwest")
p = ggplot(midwest, aes(x=area, y=poptotal))
p + geom_point(aes(col=state, size=popdensity)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 0.1)) +
ylim(c(0, 500000)) +
labs(subtitle="Area Vs Population",
y="Population",
x="Area",
title="Scatterplot",
caption = "Source: midwest")
p = ggplot(data = midwest, aes(x = area, y = poptotal))
p + geom_point()
plot(midwest$area,midwest$poptotal) #base
p = ggplot(data = midwest, aes(x = area, y = poptotal))  #ggplot
options(scipen=999)  # turn-off scientific notation like 1e+48
theme_set(theme_bw())  # pre-set the bw theme.
data("midwest", package = "ggplot2")
# Scatterplot
plot(midwest$area,midwest$poptotal) #base
p = ggplot(data = midwest, aes(x = area, y = poptotal))  #ggplot
p + geom_point()
plot(midwest$area,midwest$poptotal) #base
options(scipen=999)  # turn-off scientific notation like 1e+48
theme_set(theme_bw())  # pre-set the bw theme.
data("midwest", package = "ggplot2")
# Scatterplot
plot(midwest$area,midwest$poptotal) #base
p = ggplot(data = midwest, aes(x = area, y = poptotal))  #ggplot
p + geom_point()
library(gridExtra)
library(knitr)
# Set figure dimensions
#opts_chunk$set(fig.width=5, fig.height=5)
# Set figures to upload to imgur.com
opts_knit$set(upload.fun = imgur_upload, base.url = NULL)
rmd.file <- "Data Visualization - Part 1.Rmd"
# Knit the .Rmd file
knit(rmd.file)
# Set up input/ output files
markdown.file <- gsub(pattern = "Rmd$", replacement = "md", x = rmd.file)
html.file <- gsub(pattern = "md$", replacement = "_pub.html", x = markdown.file)
library(markdown)
# Removes 'yaml' information
markdownToHTML(file = markdown.file, output = html.file, fragment.only = TRUE)
library(RWordPress)
# Set your WP username, password, and your site URL
options(WordpressLogin = c(stoltzmaniac = 'ejkDD$$ckckslppzzzekAABV'),
WordpressURL = 'https://stoltzmaniac.com/xmlrpc.php')
# Create a line-by-line text vector
text = paste(readLines(html.file), collapse = "\n")
# Send to Worpdress
newPost(list(description = text, title = "Data Visualization - Part 1"), publish = FALSE)
library(knitr)
opts_knit$set(upload.fun = imgur_upload, base.url = NULL)
rmd.file <- "Data Visualization - Part 1.Rmd"
knit(rmd.file)
library(grid)
library(png)
library(grid)
img = readPNG("images/title_photo_3.png")
grid.raster(img)
img = readPNG("images/chart_vs_text.png")
grid.raster(img)
library(png)
library(grid)
img = readPNG("images/title_photo_2.png")
grid.raster(img)
library(png)
library(grid)
img = readPNG("images/title_photo_3.png")
grid.raster(img)
library(png)
library(grid)
img = readPNG("images/title_photo_3.png")
grid.raster(img)
img = readPNG("images/chart_vs_text.png")
grid.raster(img)
help(grid.raster)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(scales)
#Custom data preparation
#GitHub (linked to at bottom of this post)
source('data_preparation.R')
data = getData()
head(data)
library(knitr)
# Set figure dimensions
#opts_chunk$set(fig.width=5, fig.height=5)
# Set figures to upload to imgur.com
opts_knit$set(upload.fun = imgur_upload, base.url = NULL)
rmd.file <- "Data Visualization - Part 3.Rmd"
# Knit the .Rmd file
knit(rmd.file)
# Set up input/ output files
markdown.file <- gsub(pattern = "Rmd$", replacement = "md", x = rmd.file)
html.file <- gsub(pattern = "md$", replacement = "_pub.html", x = markdown.file)
library(markdown)
# Removes 'yaml' information
markdownToHTML(file = markdown.file, output = html.file, fragment.only = TRUE)
library(RWordPress)
# Set your WP username, password, and your site URL
options(WordpressLogin = c(stoltzmaniac = 'ejkDD$$ckckslppzzzekAABV'),
WordpressURL = 'https://stoltzmaniac.com/xmlrpc.php')
# Create a line-by-line text vector
text = paste(readLines(html.file), collapse = "\n")
# Send to Worpdress
newPost(list(description = text, title = "Data Visualization - Part 3"), publish = FALSE)
library(knitr)
# Set figure dimensions
#opts_chunk$set(fig.width=5, fig.height=5)
# Set figures to upload to imgur.com
opts_knit$set(upload.fun = imgur_upload, base.url = NULL)
rmd.file <- "Data Visualization - Part 3.Rmd"
# Knit the .Rmd file
knit(rmd.file)
# Set up input/ output files
markdown.file <- gsub(pattern = "Rmd$", replacement = "md", x = rmd.file)
html.file <- gsub(pattern = "md$", replacement = "_pub.html", x = markdown.file)
library(markdown)
# Removes 'yaml' information
markdownToHTML(file = markdown.file, output = html.file, fragment.only = TRUE)
library(RWordPress)
# Set your WP username, password, and your site URL
options(WordpressLogin = c(stoltzmaniac = 'ejkDD$$ckckslppzzzekAABV'),
WordpressURL = 'https://stoltzmaniac.com/xmlrpc.php')
# Create a line-by-line text vector
text = paste(readLines(html.file), collapse = "\n")
# Send to Worpdress
newPost(list(description = text, title = "Data Visualization - Part 3"), publish = FALSE)
library(knitr)
# Set figure dimensions
#opts_chunk$set(fig.width=5, fig.height=5)
# Set figures to upload to imgur.com
opts_knit$set(upload.fun = imgur_upload, base.url = NULL)
rmd.file <- "Data Visualization - Part 3.Rmd"
# Knit the .Rmd file
knit(rmd.file)
# Set up input/ output files
markdown.file <- gsub(pattern = "Rmd$", replacement = "md", x = rmd.file)
html.file <- gsub(pattern = "md$", replacement = "_pub.html", x = markdown.file)
library(markdown)
# Removes 'yaml' information
markdownToHTML(file = markdown.file, output = html.file, fragment.only = TRUE)
library(RWordPress)
# Set your WP username, password, and your site URL
options(WordpressLogin = c(stoltzmaniac = 'ejkDD$$ckckslppzzzekAABV'),
WordpressURL = 'https://stoltzmaniac.com/xmlrpc.php')
# Create a line-by-line text vector
text = paste(readLines(html.file), collapse = "\n")
# Send to Worpdress
newPost(list(description = text, title = "Data Visualization - Part 3"), publish = FALSE)
library(knitr)
# Set figure dimensions
#opts_chunk$set(fig.width=5, fig.height=5)
# Set figures to upload to imgur.com
opts_knit$set(upload.fun = imgur_upload, base.url = NULL)
rmd.file <- "Data Visualization - Part 3.Rmd"
# Knit the .Rmd file
knit(rmd.file)
# Set up input/ output files
markdown.file <- gsub(pattern = "Rmd$", replacement = "md", x = rmd.file)
html.file <- gsub(pattern = "md$", replacement = "_pub.html", x = markdown.file)
library(markdown)
# Removes 'yaml' information
markdownToHTML(file = markdown.file, output = html.file, fragment.only = TRUE)
library(RWordPress)
# Set your WP username, password, and your site URL
options(WordpressLogin = c(stoltzmaniac = 'ejkDD$$ckckslppzzzekAABV'),
WordpressURL = 'https://stoltzmaniac.com/xmlrpc.php')
# Create a line-by-line text vector
text = paste(readLines(html.file), collapse = "\n")
# Send to Worpdress
newPost(list(description = text, title = "Data Visualization - Part 3"), publish = FALSE)
library(knitr)
# Set figure dimensions
#opts_chunk$set(fig.width=5, fig.height=5)
# Set figures to upload to imgur.com
opts_knit$set(upload.fun = imgur_upload, base.url = NULL)
rmd.file <- "Data Visualization - Part 3.Rmd"
# Knit the .Rmd file
knit(rmd.file)
# Set up input/ output files
markdown.file <- gsub(pattern = "Rmd$", replacement = "md", x = rmd.file)
html.file <- gsub(pattern = "md$", replacement = "_pub.html", x = markdown.file)
library(markdown)
# Removes 'yaml' information
markdownToHTML(file = markdown.file, output = html.file, fragment.only = TRUE)
library(RWordPress)
# Set your WP username, password, and your site URL
options(WordpressLogin = c(stoltzmaniac = 'ejkDD$$ckckslppzzzekAABV'),
WordpressURL = 'https://stoltzmaniac.com/xmlrpc.php')
# Create a line-by-line text vector
text = paste(readLines(html.file), collapse = "\n")
# Send to Worpdress
newPost(list(description = text, title = "Data Visualization - Part 3"), publish = FALSE)
